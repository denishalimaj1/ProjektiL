{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arber Lluka\\\\Desktop\\\\P3\\\\ProjektiLab\\\\src\\\\pages\\\\auth\\\\ForgotPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase.js\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('../../../node_modules/firebase/firebase-auth');\n\nconst ForgotPassword = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoading(false);\n      toast.success('Check your email for password reset link');\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error.message);\n      console.log('ERROR MSG IN FORGOT PASSWORD', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-danger\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-raised\",\n        disabled: !email,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ForgotPassword, \"n2aXyYvvc3ulWUbrsWaKhjKaaso=\", false, function () {\n  return [useSelector];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["C:/Users/Arber Lluka/Desktop/P3/ProjektiLab/src/pages/auth/ForgotPassword.js"],"names":["React","useState","useEffect","auth","toast","ToastContainer","useSelector","Link","firebase","require","ForgotPassword","history","email","setEmail","loading","setLoading","user","state","token","push","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_REDIRECT","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","message","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;;;AACAC,OAAO,CAAC,8CAAD,CAAP;;AAGA,MAAMC,cAAc,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC9B,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,OAAD,EAASC,UAAT,IAAqBd,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAK;AAACe,IAAAA;AAAD,MAAOV,WAAW,CAAEW,KAAD,KAAU,EAAC,GAAGA;AAAJ,GAAV,CAAD,CAAvB;AACAf,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGc,IAAI,IAAIA,IAAI,CAACE,KAAhB,EAAuBP,OAAO,CAACQ,IAAR,CAAa,GAAb;AAG1B,GAJQ,EAIN,EAJM,CAAT;;AAKA,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,MAAM,GAAC;AACTC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,kCADR;AAETC,MAAAA,eAAe,EAAC;AAFP,KAAb;AAOA,UAAMzB,IAAI,CAAC0B,sBAAL,CAA4BjB,KAA5B,EAAkCW,MAAlC,EACLO,IADK,CACA,MAAI;AACNjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAX,MAAAA,KAAK,CAAC2B,OAAN,CAAc,0CAAd;AAGH,KAPK,EAQLC,KARK,CAQEC,KAAD,IAAS;AACZlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAX,MAAAA,KAAK,CAAC6B,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CH,KAA3C;AACH,KAZK,CAAN;AAiBH,GA3BD;;AA6BA,sBAAQ;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,eACHnB,OAAO,gBAAE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,gBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADjD,eAGJ;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,cAA9B;AAA6C,QAAA,KAAK,EAAER,KAApD;AAA2D,QAAA,QAAQ,EAAES,CAAC,IAAER,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAhF;AAAkG,QAAA,WAAW,EAAC,iBAA9G;AAAgI,QAAA,SAAS;AAAzI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,QAAQ,EAAE,CAAC1B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH,CAjDD;;GAAMF,c;UAGUJ,W;;;KAHVI,c;AAkDN,eAAeA,cAAf","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { auth } from \"../../firebase.js\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom'\r\nimport firebase from \"firebase/app\";\r\nrequire('../../../node_modules/firebase/firebase-auth');\r\n\r\n\r\nconst ForgotPassword=({history})=>{\r\n    const[email,setEmail]=useState('')\r\n    const [loading,setLoading]=useState(false);\r\n    const{user}=useSelector((state)=>({...state}));\r\n    useEffect(() =>{\r\n        if(user && user.token) history.push(\"/\");\r\n\r\n\r\n    }, []);\r\n    const handleSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const config={\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n            handleCodeInApp:true,\r\n\r\n        };\r\n\r\n\r\n        await auth.sendPasswordResetEmail(email,config)\r\n        .then(()=>{\r\n            setEmail('')\r\n            setLoading(false)\r\n            toast.success('Check your email for password reset link');\r\n\r\n\r\n        })\r\n        .catch((error)=>{\r\n            setLoading(false)\r\n            toast.error(error.message);\r\n            console.log('ERROR MSG IN FORGOT PASSWORD',error)\r\n        });\r\n\r\n\r\n        \r\n\r\n    };\r\n\r\n    return( <div className=\"container col-md-6 offset-md-3 p-5\">\r\n        {loading ?<h4 className=\"text-danger\">Loading</h4> : <h4>Forgot Password</h4>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"email\" className=\"form-control\" value={email} onChange={e=>setEmail(e.target.value)} placeholder=\"Type your email\" autoFocus/>\r\n            <br/>\r\n            <button className=\"btn btn-raised\" disabled={!email}>Submit</button>\r\n        </form>\r\n    </div>\r\n    );\r\n\r\n};\r\nexport default ForgotPassword\r\n"]},"metadata":{},"sourceType":"module"}