{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Denis\\\\OneDrive\\\\Desktop\\\\ProjektiL\\\\ProjektiL\\\\src\\\\components\\\\routes\\\\AdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const currentAdmin = async authtoken => {\n  return await axios.post(`${process.env.REACT_APP_API}/current-admin`, {}, {\n    headers: {\n      authtoken\n    }\n  });\n};\n\nconst AdminRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [ok, setOk] = useState(false);\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token).then(res => {\n        console.log(\"CURRENT ADMIN RES\", res);\n        setOk(true);\n      }).catch(err => {\n        console.log(\"ADMIN ROUTE ERR\", err);\n        setOk(false);\n      });\n    }\n  }, [user]);\n  return ok ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }, this);\n};\n\n_s(AdminRoute, \"BsbYAAh6KWoM2XMHmwtXMR2wldg=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/Denis/OneDrive/Desktop/ProjektiL/ProjektiL/src/components/routes/AdminRoute.js"],"names":["React","useEffect","useState","Route","useSelector","LoadingToRedirect","axios","currentAdmin","authtoken","post","process","env","REACT_APP_API","headers","AdminRoute","children","rest","user","state","ok","setOk","token","then","res","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,SAAP,IAAqB;AAC7C,SAAO,MAAMF,KAAK,CAACG,IAAN,CACP,GAAEC,OAAO,CAACC,GAAR,CAAYC,aAAc,gBADrB,EAER,EAFQ,EAGR;AACIC,IAAAA,OAAO,EAAE;AACLL,MAAAA;AADK;AADb,GAHQ,CAAb;AASF,CAVK;;AAeP,MAAMM,UAAU,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAU,KAAGC;AAAb,CAAD,KAAsB;AAAA;;AACnC,QAAK;AAACC,IAAAA;AAAD,MAASb,WAAW,CAAEc,KAAD,KAAU,EAAC,GAAGA;AAAJ,GAAV,CAAD,CAAzB;AACA,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAWlB,QAAQ,CAAC,KAAD,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGgB,IAAI,IAAIA,IAAI,CAACI,KAAhB,EAAuB;AACnBd,MAAAA,YAAY,CAACU,IAAI,CAACI,KAAN,CAAZ,CACCC,IADD,CACOC,GAAD,IAAO;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCF,GAAhC;AACAH,QAAAA,KAAK,CAAC,IAAD,CAAL;AAGH,OAND,EAOCM,KAPD,CAOQC,GAAD,IAAQ;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BE,GAA9B;AACAP,QAAAA,KAAK,CAAC,KAAD,CAAL;AACH,OAVD;AAcH;AAGJ,GAnBQ,EAmBP,CAACH,IAAD,CAnBO,CAAT;AAoBA,SAAOE,EAAE,gBACP,QAAC,KAAD,OAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UADO,gBAGR,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAHD;AAKH,CA7BD;;GAAMF,U;UACYV,W;;;KADZU,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\nimport axios from \"axios\";\r\n\r\nexport const currentAdmin = async (authtoken) => {\r\n    return await axios.post(\r\n         `${process.env.REACT_APP_API}/current-admin`,\r\n         {},\r\n         {\r\n             headers: {\r\n                 authtoken,\r\n             },\r\n         }\r\n     );\r\n };\r\n\r\n\r\n\r\n\r\nconst AdminRoute=({children,...rest})=>{\r\n    const{user} = useSelector((state)=>({...state}));\r\n    const [ok,setOk]=useState(false);\r\n\r\n    useEffect(() => {\r\n        if(user && user.token) {\r\n            currentAdmin(user.token)\r\n            .then((res)=>{\r\n                console.log(\"CURRENT ADMIN RES\",res);\r\n                setOk(true);\r\n\r\n \r\n            })\r\n            .catch((err) =>{\r\n                console.log(\"ADMIN ROUTE ERR\",err);\r\n                setOk(false);\r\n            });\r\n\r\n\r\n            \r\n        }\r\n\r\n\r\n    },[user]);\r\n    return ok ? (\r\n      <Route {...rest}/>\r\n     ):( \r\n     <LoadingToRedirect/>\r\n     );\r\n};\r\nexport default AdminRoute;"]},"metadata":{},"sourceType":"module"}