{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arber Lluka\\\\Desktop\\\\P3\\\\ProjektiLab\\\\src\\\\pages\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase.js\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GoogleOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { createOrUpdateUser } from \"../../functions/auth\";\nimport { currentUser } from \"../../functions/auth\";\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('../../../node_modules/firebase/firebase-auth');\n\nconst Login = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"al47128@ubt-uni.net\");\n  const [password, setPassword] = useState(\"arberarber\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, [user]);\n  let dispatch = useDispatch();\n\n  const roleBasedRedirect = res => {\n    if (res.data.role === 'admin') {\n      history.push(\"/admin/dashboard\");\n    } else {\n      history.push(\"/user/history\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    console.table(email, password);\n\n    try {\n      const result = await firebase.auth().signInWithEmailAndPassword(email, password); // console.log(result);\n\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      createOrUpdateUser(idTokenResult.token).then(res => {\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: {\n            name: res.data.name,\n            email: res.data.email,\n            token: idTokenResult.token,\n            role: res.data.role,\n            _id: res.data._id\n          }\n        });\n        roleBasedRedirect(res);\n      }).catch(err => console.log(err)); //history.push('/');\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const googleLogin = async () => {\n    auth.signInWithPopup(googleAuthProvider).then(async result => {\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      createOrUpdateUser(idTokenResult.token).then(res => {\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: {\n            name: res.data.name,\n            email: res.data.email,\n            token: idTokenResult.token,\n            role: res.data.role,\n            _id: res.data._id\n          }\n        });\n\n        const roleBasedRedirect = res => {\n          if (res.data.role === 'admin') {\n            history.push(\"/admin/dashboard\");\n          } else {\n            history.push(\"/user/history\");\n          }\n        };\n      }).catch(err => console.log(err));\n      history.push('/');\n    }).catch(err => {\n      console.log(err);\n      toast.error(err.message);\n    });\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      type: \"primary\",\n      className: \"mb-3\",\n      block: true,\n      shape: \"round\",\n      size: \"large\",\n      disabled: !email || password.length < 6,\n      children: \"Login with Email/Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-danger\",\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), loginForm(), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: googleLogin,\n          type: \"danger\",\n          className: \"mb-3\",\n          block: true,\n          icon: /*#__PURE__*/_jsxDEV(GoogleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 24\n          }, this),\n          shape: \"round\",\n          size: \"large\",\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot/password\",\n          className: \"float-right text-danger\",\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"BHGEGwyv5MgO8ckXQdFqPQRt6Ok=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Arber Lluka/Desktop/P3/ProjektiLab/src/pages/auth/Login.js"],"names":["React","useState","useEffect","auth","googleAuthProvider","toast","Button","useDispatch","useSelector","GoogleOutlined","MailOutlined","Link","axios","createOrUpdateUser","currentUser","firebase","require","Login","history","email","setEmail","password","setPassword","loading","setLoading","user","state","token","push","dispatch","roleBasedRedirect","res","data","role","handleSubmit","e","preventDefault","console","table","result","signInWithEmailAndPassword","idTokenResult","getIdTokenResult","then","type","payload","name","_id","catch","err","log","error","message","googleLogin","signInWithPopup","loginForm","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase.js\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { GoogleOutlined, MailOutlined } from \"@ant-design/icons\";\nimport {Link} from 'react-router-dom'\nimport axios from 'axios';\nimport { createOrUpdateUser } from \"../../functions/auth\";\nimport { currentUser } from \"../../functions/auth\";\nimport firebase from \"firebase/app\";\nrequire('../../../node_modules/firebase/firebase-auth');\n\n\n\n\n\nconst Login = ({history}) => {\n    const [email, setEmail] = useState(\"al47128@ubt-uni.net\");\n    const [password, setPassword] = useState(\"arberarber\");\n    const [loading, setLoading] = useState(false);\n    const{user}=useSelector((state)=>({...state}));\n    useEffect(() =>{\n        \n        if(user && user.token) history.push(\"/\");\n        \n\n    }, [user]);\n    let dispatch = useDispatch();\n    \n    const roleBasedRedirect=(res) =>{\n        if(res.data.role==='admin')  {\n          history.push(\"/admin/dashboard\");    \n        }else{\n          history.push(\"/user/history\");\n       \n        }     \n      };\n      \n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        console.table(email, password);\n      \n    \n        try {\n            const result = await firebase.auth().signInWithEmailAndPassword(email, password);\n           // console.log(result);\n            const { user } = result;\n            const idTokenResult = await user.getIdTokenResult();\n\n            createOrUpdateUser(idTokenResult.token).then((res) => {\n                dispatch({\n                    type: \"LOGGED_IN_USER\",\n                    payload: {\n                    name: res.data.name,\n                    email: res.data.email,\n                    token: idTokenResult.token,\n                    role: res.data.role,\n                    _id: res.data._id,\n           \n                 },\n           \n                });\n                roleBasedRedirect(res);\n            })\n            .catch((err) => console.log(err));\n          \n            //history.push('/');\n            \n        } catch (error) {\n            console.log(error);\n            toast.error(error.message);\n            setLoading(false);\n\n        }\n        \n\n    };\n    const googleLogin = async () => {\n        auth.signInWithPopup(googleAuthProvider)\n            .then(async (result) => {\n                const { user } = result\n                const idTokenResult = await user.getIdTokenResult();\n                createOrUpdateUser(idTokenResult.token).then((res) => {\n                    dispatch({\n                        type: \"LOGGED_IN_USER\",\n                        payload: {\n                            name: res.data.name,\n                          email: res.data.email,\n                          token: idTokenResult.token,\n                          role: res.data.role,\n                          _id: res.data._id,\n               \n                     },\n                     \n                    });\n                    const roleBasedRedirect=(res) =>{\n                        if(res.data.role==='admin')  {\n                          history.push(\"/admin/dashboard\");    \n                        }else{\n                          history.push(\"/user/history\");\n                       \n                        }     \n                      };\n                   \n                      \n                })\n                .catch((err) => console.log(err));\n                history.push('/');\n\n            })\n            .catch((err) => {\n                console.log(err)\n                toast.error(err.message);\n\n            });\n    };\n\n\n\n    const loginForm = () =>\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Your email\" autoFocus />\n\n\n\n            </div>\n           \n            <div className=\"form-group\">\n                <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Your password\" />\n\n\n            </div>\n            <br />\n            <Button\n                onClick={handleSubmit}\n                type=\"primary\"\n                className=\"mb-3\"\n                block\n                shape=\"round\"\n                size=\"large\"\n                disabled={!email || password.length < 6}>\n\n            Login with Email/Password</Button>\n    \n        </form>\n    return (\n        <div className=\"container p-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    {loading ? (<h4 className=\"text-danger\">Loading..</h4>) :\n                       (<h4>Login</h4>) }\n       \n                    {loginForm()}\n\n                    <Button\n                onClick={googleLogin}\n                type=\"danger\"\n                className=\"mb-3\"\n                block\n                icon ={<GoogleOutlined/>}\n                shape=\"round\"\n                size=\"large\"\n                >\n                    Login with Google\n                    </Button>\n                <Link to=\"/forgot/password\" className=\"float-right text-danger\">Forgot Password</Link>\n\n\n\n\n\n\n                </div>\n\n\n            </div>\n            \n        </div>\n\n        \n    );\n\n\n\n};\nexport default Login;"]},"metadata":{},"sourceType":"module"}