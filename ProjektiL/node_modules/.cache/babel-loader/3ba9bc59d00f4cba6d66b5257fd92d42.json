{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arber Lluka\\\\Desktop\\\\Projekti\\\\ProjektiL\\\\ProjektiL\\\\src\\\\components\\\\routes\\\\UserRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRoute = ({\n  children,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  return user && user.token ? /*#__PURE__*/_jsxDEV(Route, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 6\n  }, this);\n};\n\n_s(UserRoute, \"Jxgif+QfY7+MStbF+F1uZ9ypUGY=\", false, function () {\n  return [useSelector];\n});\n\n_c = UserRoute;\nexport default UserRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRoute\");","map":{"version":3,"sources":["C:/Users/Arber Lluka/Desktop/Projekti/ProjektiL/ProjektiL/src/components/routes/UserRoute.js"],"names":["React","Route","Link","useSelector","LoadingToRedirect","UserRoute","children","rest","user","state","token"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,IAAd,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AACA,MAAMC,SAAS,GAAC,CAAC;AAACC,EAAAA,QAAD;AAAU,KAAGC;AAAb,CAAD,KAAsB;AAAA;;AAClC,QAAK;AAACC,IAAAA;AAAD,MAASL,WAAW,CAAEM,KAAD,KAAU,EAAC,GAAGA;AAAJ,GAAV,CAAD,CAAzB;AACA,SAAOD,IAAI,IAAIA,IAAI,CAACE,KAAb,gBACL,QAAC,KAAD,OAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,UADK,gBAGN,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAHD;AAKH,CAPD;;GAAMF,S;UACYF,W;;;KADZE,S;AAQN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport {Route,Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\nconst UserRoute=({children,...rest})=>{\r\n    const{user} = useSelector((state)=>({...state}));\r\n    return user && user.token ? (\r\n      <Route {...rest}  />\r\n     ): ( \r\n     <LoadingToRedirect />\r\n     );\r\n};\r\nexport default UserRoute;"]},"metadata":{},"sourceType":"module"}