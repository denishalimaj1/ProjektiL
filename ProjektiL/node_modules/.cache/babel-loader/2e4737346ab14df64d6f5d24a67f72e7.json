{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arber Lluka\\\\Desktop\\\\Projekti\\\\ProjektiL\\\\ProjektiL\\\\src\\\\pages\\\\auth\\\\RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from '../../firebase.js';\nimport { toast } from 'react-toastify';\nimport { useDispatch } from \"react-redux\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\nimport firebase from '@firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nconst RegisterComplete = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); //const{user}=useSelector((state)=>({...state}));\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    setEmail(window.localStorage.getItem('emailForRegistration'));\n    console.log(window.location.href);\n    console.log(window.localStorage.getItem('emailForRegistration'));\n  }, [user, history]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //validation\n\n    if (!email || !password) {\n      toast.error('Email and password is required');\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters long');\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href); //  console.log(\"RESULT\", result);\n\n      if (result.user.emailVerified) {\n        window.localStorage.removeItem(\"emailForRegistration\"); //user idtoken\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); // redux store\n\n        console.log('user', user, 'idTokenResult', idTokenResult);\n        createOrUpdateUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }).catch(err => console.log(err)); //redirect\n\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised\",\n      children: \"Complete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Register Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterComplete, \"yLJsEMckwhnjgsD19d3dnFPhX6Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["C:/Users/Arber Lluka/Desktop/Projekti/ProjektiL/ProjektiL/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useDispatch","createOrUpdateUser","firebase","require","RegisterComplete","history","email","setEmail","password","setPassword","dispatch","window","localStorage","getItem","console","log","location","href","user","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\nimport {auth} from '../../firebase.js'\r\nimport {toast} from 'react-toastify'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createOrUpdateUser } from \"../../functions/auth\";\r\nimport firebase from '@firebase/app';\r\nrequire('firebase/auth');\r\n\r\n\r\n \r\n\r\nconst RegisterComplete=({history}) =>{\r\n    const[email,setEmail]=useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    //const{user}=useSelector((state)=>({...state}));\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem('emailForRegistration'));\r\n        console.log(window.location.href);\r\n        console.log(window.localStorage.getItem('emailForRegistration'));\r\n\r\n    }, [user,history]);\r\n    \r\n    const handleSubmit=async(e) =>{\r\n        e.preventDefault();\r\n\r\n        //validation\r\n\r\n        if (!email || !password) {\r\n            toast.error('Email and password is required');\r\n            return;\r\n        }\r\n        if (password.length < 6) {\r\n            toast.error('Password must be at least 6 characters long');\r\n            return;\r\n        }\r\n\r\n\r\n        try {\r\n            const result = await auth.signInWithEmailLink(email,\r\n                window.location.href);\r\n        //  console.log(\"RESULT\", result);\r\n            if (result.user.emailVerified) {\r\n                window.localStorage.removeItem(\"emailForRegistration\");\r\n                //user idtoken\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password);\r\n                const idTokenResult = await user.getIdTokenResult();\r\n                // redux store\r\n                console.log('user', user, 'idTokenResult', idTokenResult);\r\n               \r\n                createOrUpdateUser(idTokenResult.token).then((res) => {\r\n                    dispatch({\r\n                        type: \"LOGGED_IN_USER\",\r\n                        payload: {\r\n                            name: res.data.name,\r\n                          email: res.data.email,\r\n                          token: idTokenResult.token,\r\n                          role: res.data.role,\r\n                          _id: res.data._id,\r\n               \r\n                     },\r\n               \r\n                    });\r\n                })\r\n                .catch((err) => console.log(err));\r\n               \r\n                //redirect\r\n                history.push('/')\r\n                \r\n           }\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message);\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const completeRegistrationForm=()=>\r\n    <form onSubmit={handleSubmit}>\r\n            <input type=\"email\" className=\"form-control\" value={email} disabled />\r\n\r\n            <input type=\"password\" className=\"form-control\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                placeholder = \"Password\"\r\n                autoFocus\r\n            />\r\n            <br />\r\n        \r\n    <button type=\"submit\" className=\"btn btn-raised\">Complete Registration</button>\r\n    \r\n    </form> \r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6 offset-md-3\">\r\n        <h4>Register Complete</h4>\r\n       \r\n        {completeRegistrationForm()}\r\n\r\n            </div>\r\n\r\n\r\n            </div>\r\n            \r\n            </div>\r\n\r\n    )\r\n\r\n}\r\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}