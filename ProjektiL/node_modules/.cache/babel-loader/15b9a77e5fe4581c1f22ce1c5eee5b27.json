{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arber Lluka\\\\Desktop\\\\P3\\\\ProjektiLab\\\\src\\\\pages\\\\auth\\\\RegisterComplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from '../../firebase.js';\nimport { toast } from 'react-toastify';\nimport firebase from '@firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('firebase/auth');\n\nconst RegisterComplete = ({\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    setEmail(window.localStorage.getItem('emailForRegistration'));\n    console.log(window.location.href);\n    console.log(window.localStorage.getItem('emailForRegistration'));\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //validation\n\n    if (!email || !password) {\n      toast.error('Email and password is required');\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters long');\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href); //  console.log(\"RESULT\", result);\n\n      if (result.user.emailVerified) {\n        window.localStorage.removeItem(\"emailForRegistration\"); //user idtoken\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); // redux store\n\n        console.log('user', user, 'idTokenResult', idTokenResult); //redirect\n\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-raised\",\n      children: \"Complete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Register Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), completeRegistrationForm()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterComplete, \"aGQmXSuGXS2RvooIMGeatk20v/o=\");\n\n_c = RegisterComplete;\nexport default RegisterComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterComplete\");","map":{"version":3,"sources":["C:/Users/Arber Lluka/Desktop/P3/ProjektiLab/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","firebase","require","RegisterComplete","history","email","setEmail","password","setPassword","window","localStorage","getItem","console","log","location","href","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","user","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","push","message","completeRegistrationForm","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\"\nimport {auth} from '../../firebase.js'\nimport {toast} from 'react-toastify'\nimport firebase from '@firebase/app';\nrequire('firebase/auth');\n\nconst RegisterComplete=({history}) =>{\n    const[email,setEmail]=useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        setEmail(window.localStorage.getItem('emailForRegistration'));\n        console.log(window.location.href);\n        console.log(window.localStorage.getItem('emailForRegistration'));\n\n    }, []);\n    \n    const handleSubmit=async(e) =>{\n        e.preventDefault();\n\n        //validation\n\n        if (!email || !password) {\n            toast.error('Email and password is required');\n            return;\n        }\n        if (password.length < 6) {\n            toast.error('Password must be at least 6 characters long');\n            return;\n        }\n\n\n        try {\n            const result = await auth.signInWithEmailLink(email,\n                window.location.href);\n        //  console.log(\"RESULT\", result);\n            if (result.user.emailVerified) {\n                window.localStorage.removeItem(\"emailForRegistration\");\n                //user idtoken\n                let user = auth.currentUser\n                await user.updatePassword(password);\n                const idTokenResult = await user.getIdTokenResult();\n                // redux store\n                console.log('user', user, 'idTokenResult', idTokenResult);\n                //redirect\n                history.push('/')\n                \n           }\n\n\n\n        } catch (error) {\n            console.log(error);\n            toast.error(error.message);\n\n        }\n\n\n    };\n\n    const completeRegistrationForm=()=>\n    <form onSubmit={handleSubmit}>\n            <input type=\"email\" className=\"form-control\" value={email} disabled />\n\n            <input type=\"password\" className=\"form-control\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                placeholder = \"Password\"\n                autoFocus\n            />\n            <br />\n        \n    <button type=\"submit\" className=\"btn btn-raised\">Complete Registration</button>\n    \n    </form> \n    return (\n        <div className=\"container p-5\">\n            <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n        <h4>Register Complete</h4>\n       \n        {completeRegistrationForm()}\n\n            </div>\n\n\n            </div>\n            \n            </div>\n\n    )\n\n}\nexport default RegisterComplete;"]},"metadata":{},"sourceType":"module"}