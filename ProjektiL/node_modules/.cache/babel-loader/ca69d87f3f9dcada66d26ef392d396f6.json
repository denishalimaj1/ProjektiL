{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Denis\\\\OneDrive\\\\Desktop\\\\ProjektiL\\\\ProjektiL\\\\src\\\\components\\\\routes\\\\LoadingToRedirect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingToRedirect = () => {\n  _s();\n\n  const [count, setCount] = useState(5);\n  let history = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(currentCount => --currentCount);\n    }, 1000); //redirect once count is equal to 0\n\n    count === 0 && history.push('/'); //cleanup\n\n    return () => clearInterval();\n  }, [count, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5 text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Redirecting you in \", count, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoadingToRedirect, \"0OTkZ19HHYpCYU6oDRV8B0RUThw=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoadingToRedirect;\nexport default LoadingToRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingToRedirect\");","map":{"version":3,"sources":["C:/Users/Denis/OneDrive/Desktop/ProjektiL/ProjektiL/src/components/routes/LoadingToRedirect.js"],"names":["React","useState","useEffect","useHistory","LoadingToRedirect","count","setCount","history","interval","setInterval","currentCount","push","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;AAGA,MAAMC,iBAAiB,GAAG,MAAI;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBL,QAAQ,CAAC,CAAD,CAA/B;AACA,MAAIM,OAAO,GAACJ,UAAU,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAER,UAAMM,QAAQ,GAACC,WAAW,CAAE,MAAI;AAC5BH,MAAAA,QAAQ,CAAEI,YAAD,IAAgB,EAAEA,YAAnB,CAAR;AAIH,KALyB,EAKxB,IALwB,CAA1B,CAFQ,CAQR;;AACAL,IAAAA,KAAK,KAAI,CAAT,IAAcE,OAAO,CAACI,IAAR,CAAa,GAAb,CAAd,CATQ,CAUR;;AACA,WAAO,MAAIC,aAAa,EAAxB;AAEP,GAbQ,EAaN,CAACP,KAAD,EAAOE,OAAP,CAbM,CAAT;AAcI,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAA,wCAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOP,CAzBD;;GAAMD,iB;UAEUD,U;;;KAFVC,iB;AA0BN,eAAeA,iBAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nconst LoadingToRedirect = ()=>{\r\n    const [count,setCount]=useState(5)\r\n    let history=useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n            const interval=setInterval (()=>{\r\n                setCount((currentCount)=>--currentCount);\r\n\r\n\r\n\r\n            },1000);\r\n            //redirect once count is equal to 0\r\n            count ===0 && history.push('/')\r\n            //cleanup\r\n            return ()=>clearInterval()\r\n\r\n    }, [count,history])\r\n        return (\r\n            <div className=\"container p-5 text-center\">\r\n                <p>Redirecting you in {count} seconds</p>\r\n            </div>\r\n\r\n\r\n        );\r\n};\r\nexport default LoadingToRedirect;\r\n"]},"metadata":{},"sourceType":"module"}